77e0c2a6bb912dea508364fcfc8651c1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _Map = _interopRequireDefault(require("../Map"));
var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));
var enzyme = _interopRequireWildcard(require("enzyme"));
var _reactNativeMaps = _interopRequireWildcard(require("react-native-maps"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
enzyme.configure({
  adapter: new _enzymeAdapterReact.default()
});
describe('Map component that renders a map view for selected location', function () {
  var routeParams = {
    params: {
      address: {
        latitude: 37.78825,
        longitude: -122.4324,
        latitudeDelta: 0.0922,
        longitudeDelta: 0.0421
      }
    }
  };
  var wrapper = (0, enzyme.shallow)((0, _jsxRuntime.jsx)(_Map.default, {
    route: routeParams
  }));
  var mapView = wrapper.find(_reactNativeMaps.default);
  it('renders map component for the selected map component', function () {
    expect(wrapper.find(_reactNativeMaps.default)).toHaveLength(1);
  });
  it('ensure that the right provider is given', function () {
    expect(mapView.prop('provider')).toEqual('google');
  });
  it('ensure that the region is correct', function () {
    expect(mapView.prop('region')).toEqual({
      latitude: routeParams.params.address.latitude,
      longitude: routeParams.params.address.longitude,
      latitudeDelta: routeParams.params.address.latitudeDelta,
      longitudeDelta: routeParams.params.address.longitudeDelta
    });
    it('renders a map with correct marker', function () {
      var marker = wrapper.find(_reactNativeMaps.Marker);
      expect(marker).toHaveLength(1);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9NYXAiLCJfZW56eW1lQWRhcHRlclJlYWN0IiwiZW56eW1lIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfcmVhY3ROYXRpdmVNYXBzIiwiX2pzeFJ1bnRpbWUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiY29uZmlndXJlIiwiYWRhcHRlciIsIkFkYXB0ZXIiLCJkZXNjcmliZSIsInJvdXRlUGFyYW1zIiwicGFyYW1zIiwiYWRkcmVzcyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwibGF0aXR1ZGVEZWx0YSIsImxvbmdpdHVkZURlbHRhIiwid3JhcHBlciIsInNoYWxsb3ciLCJqc3giLCJyb3V0ZSIsIm1hcFZpZXciLCJmaW5kIiwiTWFwVmlldyIsIml0IiwiZXhwZWN0IiwidG9IYXZlTGVuZ3RoIiwicHJvcCIsInRvRXF1YWwiLCJtYXJrZXIiLCJNYXJrZXIiXSwic291cmNlcyI6WyJNYXAudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IE1hcCBmcm9tICcuLi9NYXAnO1xyXG5pbXBvcnQgQWRhcHRlciBmcm9tICdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNic7XHJcbmltcG9ydCB7c2hhbGxvd30gZnJvbSAnZW56eW1lJztcclxuaW1wb3J0ICogYXMgZW56eW1lIGZyb20gJ2VuenltZSc7XHJcbmltcG9ydCBNYXBWaWV3LCB7TWFya2VyfSBmcm9tICdyZWFjdC1uYXRpdmUtbWFwcyc7XHJcblxyXG5lbnp5bWUuY29uZmlndXJlKHthZGFwdGVyOiBuZXcgQWRhcHRlcigpfSk7XHJcbmRlc2NyaWJlKCdNYXAgY29tcG9uZW50IHRoYXQgcmVuZGVycyBhIG1hcCB2aWV3IGZvciBzZWxlY3RlZCBsb2NhdGlvbicsICgpID0+IHtcclxuICBjb25zdCByb3V0ZVBhcmFtcyA9IHtcclxuICAgIHBhcmFtczoge1xyXG4gICAgICBhZGRyZXNzOiB7XHJcbiAgICAgICAgbGF0aXR1ZGU6IDM3Ljc4ODI1LFxyXG4gICAgICAgIGxvbmdpdHVkZTogLTEyMi40MzI0LFxyXG4gICAgICAgIGxhdGl0dWRlRGVsdGE6IDAuMDkyMixcclxuICAgICAgICBsb25naXR1ZGVEZWx0YTogMC4wNDIxLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICB9O1xyXG4gIGNvbnN0IHdyYXBwZXIgPSBzaGFsbG93KDxNYXAgcm91dGU9e3JvdXRlUGFyYW1zfSAvPik7XHJcbiAgY29uc3QgbWFwVmlldyA9IHdyYXBwZXIuZmluZChNYXBWaWV3KTtcclxuICBpdCgncmVuZGVycyBtYXAgY29tcG9uZW50IGZvciB0aGUgc2VsZWN0ZWQgbWFwIGNvbXBvbmVudCcsICgpID0+IHtcclxuICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoTWFwVmlldykpLnRvSGF2ZUxlbmd0aCgxKTtcclxuICB9KTtcclxuICBpdCgnZW5zdXJlIHRoYXQgdGhlIHJpZ2h0IHByb3ZpZGVyIGlzIGdpdmVuJywgKCkgPT4ge1xyXG4gICAgZXhwZWN0KG1hcFZpZXcucHJvcCgncHJvdmlkZXInKSkudG9FcXVhbCgnZ29vZ2xlJyk7XHJcbiAgfSk7XHJcbiAgaXQoJ2Vuc3VyZSB0aGF0IHRoZSByZWdpb24gaXMgY29ycmVjdCcsICgpID0+IHtcclxuICAgIGV4cGVjdChtYXBWaWV3LnByb3AoJ3JlZ2lvbicpKS50b0VxdWFsKHtcclxuICAgICAgbGF0aXR1ZGU6IHJvdXRlUGFyYW1zLnBhcmFtcy5hZGRyZXNzLmxhdGl0dWRlLFxyXG4gICAgICBsb25naXR1ZGU6IHJvdXRlUGFyYW1zLnBhcmFtcy5hZGRyZXNzLmxvbmdpdHVkZSxcclxuICAgICAgbGF0aXR1ZGVEZWx0YTogcm91dGVQYXJhbXMucGFyYW1zLmFkZHJlc3MubGF0aXR1ZGVEZWx0YSxcclxuICAgICAgbG9uZ2l0dWRlRGVsdGE6IHJvdXRlUGFyYW1zLnBhcmFtcy5hZGRyZXNzLmxvbmdpdHVkZURlbHRhLFxyXG4gICAgfSk7XHJcbiAgICBpdCgncmVuZGVycyBhIG1hcCB3aXRoIGNvcnJlY3QgbWFya2VyJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBtYXJrZXIgPSB3cmFwcGVyLmZpbmQoTWFya2VyKTtcclxuICAgICAgZXhwZWN0KG1hcmtlcikudG9IYXZlTGVuZ3RoKDEpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxJQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxtQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsTUFBQSxHQUFBQyx1QkFBQSxDQUFBSixPQUFBO0FBRUEsSUFBQUssZ0JBQUEsR0FBQUQsdUJBQUEsQ0FBQUosT0FBQTtBQUFrRCxJQUFBTSxXQUFBLEdBQUFOLE9BQUE7QUFBQSxTQUFBTyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUosd0JBQUFRLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FB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