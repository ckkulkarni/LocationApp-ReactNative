{"version":3,"names":["_interopRequireDefault","require","_toConsumableArray2","_asyncToGenerator2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_jsxRuntime","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","hasOwnProperty","exports","enableLatestRenderer","AnimatedMapView","MAP_TYPES","React","react_native_1","decorateMapComponent_1","ProviderConstants","MapViewNativeComponent_1","STANDARD","SATELLITE","HYBRID","TERRAIN","NONE","MUTEDSTANDARD","GOOGLE_MAPS_ONLY_TYPES","MapView","_React$Component","_super","props","_this","map","createRef","state","isReady","Platform","OS","_onMapReady","bind","_onChange","key","setNativeProps","_this$map$current","console","warn","current","onMapReady","setState","_ref","nativeEvent","isGesture","details","continuous","onRegionChange","region","onRegionChangeComplete","getCamera","NativeModules","AirMapModule","_getHandle","_runCommand","Promise","reject","setCamera","camera","Commands","animateCamera","opts","duration","animateToRegion","length","fitToElements","options","_options$edgePadding","edgePadding","top","right","bottom","left","_options$animated","animated","fitToSuppliedMarkers","markers","_options$edgePadding2","_options$animated2","fitToCoordinates","coordinates","_options$edgePadding3","_options$animated3","_getMapBoundaries","getMapBoundaries","setMapBoundaries","northEast","southWest","setIndoorActiveLevelIndex","activeLevelIndex","takeSnapshot","args","_this2","config","width","height","format","quality","Error","resolve","err","snapshot","addressForCoordinate","coordinate","getAddressFromCoordinates","pointForCoordinate","coordinateForPoint","point","getMarkersFrames","onlyVisible","boundingBoxForRegion","latitude","latitudeDelta","longitude","longitudeDelta","_mapManagerCommand","name","getNativeMapName","provider","findNodeHandle","concat","render","assign","initialRegion","onChange","ref","customMapStyleString","customMapStyle","JSON","stringify","PROVIDER_DEFAULT","mapType","includes","onPanDrag","handlePanDrag","style","initialCamera","onLayout","liteMode","jsx","ProviderContext","Provider","children","AIRMapLite","AIRMap","getNativeMapComponent","Component","airMaps","requireNativeComponent","google","googleMapIsInstalled","createNotSupportedComponent","UIManager","getViewManagerConfig","Animated","createAnimatedComponent"],"sources":["MapView.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.enableLatestRenderer = exports.AnimatedMapView = exports.MAP_TYPES = void 0;\nconst React = __importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst decorateMapComponent_1 = require(\"./decorateMapComponent\");\nconst ProviderConstants = __importStar(require(\"./ProviderConstants\"));\nconst MapViewNativeComponent_1 = require(\"./MapViewNativeComponent\");\nexports.MAP_TYPES = {\n    STANDARD: 'standard',\n    SATELLITE: 'satellite',\n    HYBRID: 'hybrid',\n    TERRAIN: 'terrain',\n    NONE: 'none',\n    MUTEDSTANDARD: 'mutedStandard',\n};\nconst GOOGLE_MAPS_ONLY_TYPES = [exports.MAP_TYPES.TERRAIN, exports.MAP_TYPES.NONE];\nclass MapView extends React.Component {\n    static Animated;\n    map;\n    constructor(props) {\n        super(props);\n        this.map = React.createRef();\n        this.state = {\n            isReady: react_native_1.Platform.OS === 'ios',\n        };\n        this._onMapReady = this._onMapReady.bind(this);\n        this._onChange = this._onChange.bind(this);\n    }\n    /**\n     * @deprecated Will be removed in v2.0.0, as setNativeProps is not a thing in fabric.\n     * See https://reactnative.dev/docs/new-architecture-library-intro#migrating-off-setnativeprops\n     */\n    setNativeProps(props) {\n        console.warn('setNativeProps is deprecated and will be removed in next major release');\n        // @ts-ignore\n        this.map.current?.setNativeProps(props);\n    }\n    _onMapReady() {\n        const { onMapReady } = this.props;\n        this.setState({ isReady: true }, () => {\n            if (onMapReady) {\n                onMapReady();\n            }\n        });\n    }\n    _onChange({ nativeEvent }) {\n        const isGesture = nativeEvent.isGesture;\n        const details = { isGesture };\n        if (nativeEvent.continuous) {\n            if (this.props.onRegionChange) {\n                this.props.onRegionChange(nativeEvent.region, details);\n            }\n        }\n        else if (this.props.onRegionChangeComplete) {\n            this.props.onRegionChangeComplete(nativeEvent.region, details);\n        }\n    }\n    getCamera() {\n        if (react_native_1.Platform.OS === 'android') {\n            return react_native_1.NativeModules.AirMapModule.getCamera(this._getHandle());\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return this._runCommand('getCamera', []);\n        }\n        return Promise.reject('getCamera not supported on this platform');\n    }\n    setCamera(camera) {\n        if (this.map.current) {\n            MapViewNativeComponent_1.Commands.setCamera(this.map.current, camera);\n        }\n    }\n    animateCamera(camera, opts) {\n        if (this.map.current) {\n            MapViewNativeComponent_1.Commands.animateCamera(this.map.current, camera, opts?.duration ? opts.duration : 500);\n        }\n    }\n    animateToRegion(region, duration = 500) {\n        if (this.map.current) {\n            MapViewNativeComponent_1.Commands.animateToRegion(this.map.current, region, duration);\n        }\n    }\n    fitToElements(options = {}) {\n        if (this.map.current) {\n            const { edgePadding = { top: 0, right: 0, bottom: 0, left: 0 }, animated = true, } = options;\n            MapViewNativeComponent_1.Commands.fitToElements(this.map.current, edgePadding, animated);\n        }\n    }\n    fitToSuppliedMarkers(markers, options = {}) {\n        if (this.map.current) {\n            const { edgePadding = { top: 0, right: 0, bottom: 0, left: 0 }, animated = true, } = options;\n            MapViewNativeComponent_1.Commands.fitToSuppliedMarkers(this.map.current, markers, edgePadding, animated);\n        }\n    }\n    fitToCoordinates(coordinates = [], options = {}) {\n        if (this.map.current) {\n            const { edgePadding = { top: 0, right: 0, bottom: 0, left: 0 }, animated = true, } = options;\n            MapViewNativeComponent_1.Commands.fitToCoordinates(this.map.current, coordinates, edgePadding, animated);\n        }\n    }\n    /**\n     * Get visible boudaries\n     *\n     * @return Promise Promise with the bounding box ({ northEast: <LatLng>, southWest: <LatLng> })\n     */\n    async getMapBoundaries() {\n        if (react_native_1.Platform.OS === 'android') {\n            return await react_native_1.NativeModules.AirMapModule.getMapBoundaries(this._getHandle());\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return await this._runCommand('getMapBoundaries', []);\n        }\n        return Promise.reject('getMapBoundaries not supported on this platform');\n    }\n    setMapBoundaries(northEast, southWest) {\n        if (this.map.current) {\n            MapViewNativeComponent_1.Commands.setMapBoundaries(this.map.current, northEast, southWest);\n        }\n    }\n    setIndoorActiveLevelIndex(activeLevelIndex) {\n        if (this.map.current) {\n            MapViewNativeComponent_1.Commands.setIndoorActiveLevelIndex(this.map.current, activeLevelIndex);\n        }\n    }\n    /**\n     * Takes a snapshot of the map and saves it to a picture\n     * file or returns the image as a base64 encoded string.\n     *\n     * @param args Configuration options\n     * @param [args.width] Width of the rendered map-view (when omitted actual view width is used).\n     * @param [args.height] Height of the rendered map-view (when omitted actual height is used).\n     * @param [args.region] Region to render (Only supported on iOS).\n     * @param [args.format] Encoding format ('png', 'jpg') (default: 'png').\n     * @param [args.quality] Compression quality (only used for jpg) (default: 1.0).\n     * @param [args.result] Result format ('file', 'base64') (default: 'file').\n     *\n     * @return Promise Promise with either the file-uri or base64 encoded string\n     */\n    takeSnapshot(args) {\n        // Sanitize inputs\n        const config = {\n            width: args.width || 0,\n            height: args.height || 0,\n            region: args.region || {},\n            format: args.format || 'png',\n            quality: args.quality || 1.0,\n            result: args.result || 'file',\n        };\n        if (config.format !== 'png' && config.format !== 'jpg') {\n            throw new Error('Invalid format specified');\n        }\n        if (config.result !== 'file' && config.result !== 'base64') {\n            throw new Error('Invalid result specified');\n        }\n        // Call native function\n        if (react_native_1.Platform.OS === 'android') {\n            return react_native_1.NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return new Promise((resolve, reject) => {\n                this._runCommand('takeSnapshot', [\n                    config.width,\n                    config.height,\n                    config.region,\n                    config.format,\n                    config.quality,\n                    config.result,\n                    (err, snapshot) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(snapshot);\n                        }\n                    },\n                ]);\n            });\n        }\n        return Promise.reject('takeSnapshot not supported on this platform');\n    }\n    /**\n     * Convert a coordinate to address by using default Geocoder\n     *\n     * @param coordinate Coordinate\n     * @param [coordinate.latitude] Latitude\n     * @param [coordinate.longitude] Longitude\n     *\n     * @return Promise with return type Address\n     */\n    addressForCoordinate(coordinate) {\n        if (react_native_1.Platform.OS === 'android') {\n            return react_native_1.NativeModules.AirMapModule.getAddressFromCoordinates(this._getHandle(), coordinate);\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return this._runCommand('getAddressFromCoordinates', [coordinate]);\n        }\n        return Promise.reject('getAddress not supported on this platform');\n    }\n    /**\n     * Convert a map coordinate to user-space point\n     *\n     * @param coordinate Coordinate\n     * @param [coordinate.latitude] Latitude\n     * @param [coordinate.longitude] Longitude\n     *\n     * @return Promise Promise with the point ({ x: Number, y: Number })\n     */\n    pointForCoordinate(coordinate) {\n        if (react_native_1.Platform.OS === 'android') {\n            return react_native_1.NativeModules.AirMapModule.pointForCoordinate(this._getHandle(), coordinate);\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return this._runCommand('pointForCoordinate', [coordinate]);\n        }\n        return Promise.reject('pointForCoordinate not supported on this platform');\n    }\n    /**\n     * Convert a user-space point to a map coordinate\n     *\n     * @param point Point\n     * @param [point.x] X\n     * @param [point.x] Y\n     *\n     * @return Promise Promise with the coordinate ({ latitude: Number, longitude: Number })\n     */\n    coordinateForPoint(point) {\n        if (react_native_1.Platform.OS === 'android') {\n            return react_native_1.NativeModules.AirMapModule.coordinateForPoint(this._getHandle(), point);\n        }\n        else if (react_native_1.Platform.OS === 'ios') {\n            return this._runCommand('coordinateForPoint', [point]);\n        }\n        return Promise.reject('coordinateForPoint not supported on this platform');\n    }\n    /**\n     * Get markers' centers and frames in user-space coordinates\n     *\n     * @param onlyVisible boolean true to include only visible markers, false to include all\n     *\n     * @return Promise Promise with { <identifier>: { point: Point, frame: Frame } }\n     */\n    getMarkersFrames(onlyVisible = false) {\n        if (react_native_1.Platform.OS === 'ios') {\n            return this._runCommand('getMarkersFrames', [onlyVisible]);\n        }\n        return Promise.reject('getMarkersFrames not supported on this platform');\n    }\n    /**\n     * Get bounding box from region\n     *\n     * @param region Region\n     *\n     * @return Object Object bounding box ({ northEast: <LatLng>, southWest: <LatLng> })\n     */\n    boundingBoxForRegion(region) {\n        return {\n            northEast: {\n                latitude: region.latitude + region.latitudeDelta / 2,\n                longitude: region.longitude + region.longitudeDelta / 2,\n            },\n            southWest: {\n                latitude: region.latitude - region.latitudeDelta / 2,\n                longitude: region.longitude - region.longitudeDelta / 2,\n            },\n        };\n    }\n    _mapManagerCommand(name) {\n        return react_native_1.NativeModules[`${(0, decorateMapComponent_1.getNativeMapName)(this.props.provider)}Manager`][name];\n    }\n    _getHandle() {\n        return (0, react_native_1.findNodeHandle)(this.map.current);\n    }\n    _runCommand(name, args) {\n        if (react_native_1.Platform.OS === 'ios') {\n            return this._mapManagerCommand(name)(this._getHandle(), ...args);\n        }\n        else {\n            return Promise.reject(`Invalid platform was passed: ${react_native_1.Platform.OS}`);\n        }\n    }\n    render() {\n        let props;\n        if (this.state.isReady) {\n            props = {\n                region: null,\n                initialRegion: null,\n                onChange: this._onChange,\n                onMapReady: this._onMapReady,\n                ref: this.map,\n                customMapStyleString: this.props.customMapStyle\n                    ? JSON.stringify(this.props.customMapStyle)\n                    : undefined,\n                ...this.props,\n            };\n            if (react_native_1.Platform.OS === 'ios' &&\n                props.provider === ProviderConstants.PROVIDER_DEFAULT &&\n                props.mapType &&\n                GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)) {\n                props.mapType = exports.MAP_TYPES.STANDARD;\n            }\n            if (props.onPanDrag) {\n                props.handlePanDrag = !!props.onPanDrag;\n            }\n        }\n        else {\n            props = {\n                style: this.props.style,\n                region: null,\n                initialRegion: this.props.initialRegion || null,\n                initialCamera: this.props.initialCamera,\n                ref: this.map,\n                onChange: this._onChange,\n                onMapReady: this._onMapReady,\n                onLayout: this.props.onLayout,\n                customMapStyleString: this.props.customMapStyle\n                    ? JSON.stringify(this.props.customMapStyle)\n                    : undefined,\n            };\n        }\n        if (react_native_1.Platform.OS === 'android' && this.props.liteMode) {\n            return (<decorateMapComponent_1.ProviderContext.Provider value={this.props.provider}>\n          <AIRMapLite {...props}/>\n        </decorateMapComponent_1.ProviderContext.Provider>);\n        }\n        const AIRMap = getNativeMapComponent(this.props.provider);\n        return (<decorateMapComponent_1.ProviderContext.Provider value={this.props.provider}>\n        <AIRMap {...props}/>\n      </decorateMapComponent_1.ProviderContext.Provider>);\n    }\n}\nconst airMaps = {\n    default: (0, react_native_1.requireNativeComponent)('AIRMap'),\n    google: () => null,\n};\nif (react_native_1.Platform.OS === 'android') {\n    airMaps.google = airMaps.default;\n}\nelse {\n    airMaps.google = decorateMapComponent_1.googleMapIsInstalled\n        ? (0, react_native_1.requireNativeComponent)('AIRGoogleMap')\n        : (0, decorateMapComponent_1.createNotSupportedComponent)('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');\n}\nconst getNativeMapComponent = (provider) => airMaps[provider || 'default'];\nconst AIRMapLite = react_native_1.UIManager.getViewManagerConfig('AIRMapLite')\n    ? (0, react_native_1.requireNativeComponent)('AIRMapLite')\n    : () => null;\nexports.AnimatedMapView = react_native_1.Animated.createAnimatedComponent(MapView);\nconst enableLatestRenderer = () => {\n    if (react_native_1.Platform.OS !== 'android') {\n        return;\n    }\n    return react_native_1.NativeModules.AirMapModule.enableLatestRenderer();\n};\nexports.enableLatestRenderer = enableLatestRenderer;\nMapView.Animated = exports.AnimatedMapView;\nexports.default = MapView;\n"],"mappings":"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"}