{"version":3,"names":["_getJestObj","mock","useDispatch","jest","fn","getCurrentPosition","success","location","coords","latitude","longitude","useNavigation","mockReturnValue","navigate","_interopRequireDefault","require","_asyncToGenerator2","_Base","_reactNative","_react","_reactNativeGeolocationService","_reactRedux","_native","_reactNative2","_jsxRuntime","_require","timestamp","Date","now","toLocaleString","year","month","day","hour","minute","navigation","describe","mockDispatch","useDispatchMock","beforeAll","default","Promise","resolve","Geolocation","position","beforeEach","it","render","jsx","currentLabel","screen","getByTestId","expect","props","children","toBe","toHaveBeenCalled","currentLocation","address","time","_render","currentLocationTime","waitFor","_render2","currentLocationAddress","_render3","currentLocationItem","fireEvent","press","toHaveBeenCalledWith","clearAllLocations","_render4","Button","title","onPress","testID","clearAllButton","previousLocations","_render5","getAllByTestId","firstLocationName"],"sources":["Base.test.tsx"],"sourcesContent":["import Base from '../Base';\r\nimport {\r\n  render,\r\n  fireEvent,\r\n  screen,\r\n  waitFor,\r\n} from '@testing-library/react-native';\r\nimport React from 'react';\r\nimport Geolocation from 'react-native-geolocation-service';\r\nimport {useDispatch} from 'react-redux';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport '@testing-library/jest-dom';\r\nimport {Button} from 'react-native';\r\njest.mock('react-redux', () => ({\r\n  useDispatch: jest.fn(),\r\n}));\r\nconst timestamp = new Date(Date.now()).toLocaleString([], {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n});\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\njest.mock('react-native-geolocation-service', () => {\r\n  return {\r\n    getCurrentPosition: jest.fn(success => {\r\n      const location = {\r\n        coords: {\r\n          latitude: 17.3920466,\r\n          longitude: 78.4758037,\r\n        },\r\n      };\r\n      success(location);\r\n    }),\r\n  };\r\n});\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\n\r\ndescribe('Locations List Screen/Base Component', () => {\r\n  let latitude: number;\r\n  let longitude: number;\r\n  const mockDispatch = jest.fn();\r\n  let useDispatchMock: jest.Mock;\r\n  beforeAll(async () => {\r\n    await new Promise<void>(resolve => {\r\n      Geolocation.getCurrentPosition(position => {\r\n        latitude = position.coords.latitude;\r\n        longitude = position.coords.longitude;\r\n        resolve();\r\n      });\r\n    });\r\n  });\r\n\r\n  beforeEach(() => {\r\n    useDispatchMock = useDispatch as jest.Mock;\r\n    useDispatchMock.mockReturnValue(mockDispatch);\r\n  });\r\n\r\n  it('renders the base component correctly', () => {\r\n    render(<Base />);\r\n    const currentLabel = screen.getByTestId('list-current-label');\r\n    expect(currentLabel.props.children).toBe('Current Location');\r\n  });\r\n  it('should have the right location', () => {\r\n    render(<Base />);\r\n    expect(Geolocation.getCurrentPosition).toHaveBeenCalled();\r\n  });\r\n  it('renders the current location time', async () => {\r\n    const currentLocation = {\r\n      address: 'unnamed road',\r\n      time: timestamp,\r\n      latitude: 42.123456,\r\n      longitude: -71.123456,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationTime = await waitFor(() =>\r\n      getByTestId('list-current-time'),\r\n    );\r\n    expect(currentLocationTime.props.children).toBe(currentLocation.time);\r\n  });\r\n  it('renders the current location address', async () => {\r\n    const currentLocation = {\r\n      address:\r\n        'unnamed road, Ward 78 Gunfoundry, Hyderabad - 500001, Telangana, India',\r\n      time: timestamp,\r\n      latitude: 42.123456,\r\n      longitude: -71.123456,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationAddress = await waitFor(() =>\r\n      getByTestId('list-current-name'),\r\n    );\r\n    expect(currentLocationAddress.props.children).toBe(currentLocation.address);\r\n  });\r\n  it('renders the whole location item correctly', async () => {\r\n    const currentLocation = {\r\n      address:\r\n        'unnamed road, Ward 78 Gunfoundry, Hyderabad - 500001, Telangana, India',\r\n      time: timestamp,\r\n      latitude,\r\n      longitude,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationItem = await waitFor(() =>\r\n      getByTestId('list-current-item'),\r\n    );\r\n    fireEvent.press(currentLocationItem);\r\n    expect(navigation.navigate).toHaveBeenCalledWith('Map', {\r\n      address: currentLocation,\r\n    });\r\n  });\r\n  it('clears all locations on button press', async () => {\r\n    const clearAllLocations = jest.fn();\r\n    const {getByTestId} = render(\r\n      <Button\r\n        title=\"Clear All Locations\"\r\n        onPress={clearAllLocations}\r\n        testID=\"list-clear-all-button\"\r\n      />,\r\n    );\r\n    const clearAllButton = await waitFor(() =>\r\n      getByTestId('list-clear-all-button'),\r\n    );\r\n    fireEvent.press(clearAllButton);\r\n    expect(clearAllLocations).toHaveBeenCalled();\r\n  });\r\n  it('renders the correct name for the first location item', async () => {\r\n    const previousLocations = [\r\n      {\r\n        address: '123 Main Street',\r\n        time: '2022-03-01T14:30:00.000Z',\r\n      },\r\n      {\r\n        address: '456 Oak Avenue',\r\n        time: '2022-03-01T12:00:00.000Z',\r\n      },\r\n    ];\r\n    const {getAllByTestId} = render(<Base />);\r\n    const firstLocationName = await waitFor(() =>\r\n      getAllByTestId(/list-previous-time-\\d+/),\r\n    );\r\n  });\r\n});\r\n"],"mappings":"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"}