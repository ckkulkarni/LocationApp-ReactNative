{"version":3,"names":["_getJestObj","mock","useDispatch","jest","fn","getCurrentPosition","success","error","options","location","coords","latitude","longitude","useNavigation","mockReturnValue","navigate","_interopRequireDefault","require","_asyncToGenerator2","_Base","_reactNative","_react","_reactNativeGeolocationService","_reactRedux","_jsxRuntime","_require","describe","mockDispatch","useDispatchMock","beforeEach","it","render","jsx","default","currentLabel","screen","getByTestId","expect","props","children","toBe","Geolocation","toHaveBeenCalled","currentLocation","address","time","Date","now","toLocaleString","_render","currentLocationTime","waitFor","_render2","currentLocationAddress","_render3","currentLocationItem","fireEvent","press","toBeCalledWith"],"sources":["Base.test.tsx"],"sourcesContent":["import Base from '../Base';\r\nimport {\r\n  render,\r\n  fireEvent,\r\n  screen,\r\n  waitFor,\r\n} from '@testing-library/react-native';\r\nimport React from 'react';\r\nimport Geolocation from 'react-native-geolocation-service';\r\nimport {useDispatch} from 'react-redux';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport '@testing-library/jest-dom';\r\njest.mock('react-redux', () => ({\r\n  useDispatch: jest.fn(),\r\n}));\r\njest.mock('react-native-geolocation-service', () => {\r\n  return {\r\n    getCurrentPosition: jest.fn((success, error, options) => {\r\n      const location = {\r\n        coords: {\r\n          latitude: 17.3920466,\r\n          longitude: 78.4758037,\r\n        },\r\n      };\r\n      success(location);\r\n    }),\r\n  };\r\n});\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\n\r\ndescribe('Locations List Screen/Base Component', () => {\r\n  const mockDispatch = jest.fn();\r\n  let useDispatchMock: jest.Mock;\r\n  beforeEach(() => {\r\n    useDispatchMock = useDispatch as jest.Mock;\r\n    useDispatchMock.mockReturnValue(mockDispatch);\r\n  });\r\n\r\n  it('renders the base component correctly', () => {\r\n    render(<Base />);\r\n    const currentLabel = screen.getByTestId('list-current-label');\r\n    expect(currentLabel.props.children).toBe('Current Location');\r\n  });\r\n  it('should have the right location', () => {\r\n    render(<Base />);\r\n    expect(Geolocation.getCurrentPosition).toHaveBeenCalled();\r\n  });\r\n  it('renders the current location time', async () => {\r\n    const currentLocation = {\r\n      address: 'unnamed road',\r\n      time: new Date(Date.now()).toLocaleString(),\r\n      latitude: 42.123456,\r\n      longitude: -71.123456,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationTime = await waitFor(() =>\r\n      getByTestId('list-current-time'),\r\n    );\r\n    expect(currentLocationTime.props.children).toBe(currentLocation.time);\r\n  });\r\n  it('renders the current location address', async () => {\r\n    const currentLocation = {\r\n      address:\r\n        'unnamed road, Ward 78 Gunfoundry, Hyderabad - 500001, Telangana, India',\r\n      time: new Date(Date.now()).toLocaleString(),\r\n      latitude: 42.123456,\r\n      longitude: -71.123456,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationAddress = await waitFor(() =>\r\n      getByTestId('list-current-name'),\r\n    );\r\n    expect(currentLocationAddress.props.children).toBe(currentLocation.address);\r\n  });\r\n  it('renders the whole location item correctly', async () => {\r\n    const currentLocation = {\r\n      address:\r\n        'unnamed road, Ward 78 Gunfoundry, Hyderabad - 500001, Telangana, India',\r\n      time: new Date(Date.now()).toLocaleString(),\r\n      latitude: 42.123456,\r\n      longitude: -71.123456,\r\n    };\r\n    const {getByTestId} = render(<Base />);\r\n    const currentLocationItem = await waitFor(() =>\r\n      getByTestId('list-current-item'),\r\n    );\r\n    fireEvent.press(currentLocationItem);\r\n    expect(currentLocationItem).toBeCalledWith(currentLocation);\r\n  });\r\n});\r\n"],"mappings":"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"}