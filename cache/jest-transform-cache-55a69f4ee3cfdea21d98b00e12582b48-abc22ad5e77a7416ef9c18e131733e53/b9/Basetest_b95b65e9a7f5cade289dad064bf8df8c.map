{"version":3,"names":["_getJestObj","mock","useDispatch","jest","fn","getCurrentPosition","success","error","options","location","coords","latitude","longitude","useNavigation","mockReturnValue","navigate","_interopRequireDefault","require","_Base","_reactNative","_react","_native","_jsxRuntime","_require","navigation","describe","mockDispatch","it","_render","render","jsx","default","getByTestId","expect","toBeDefined"],"sources":["Base.test.tsx"],"sourcesContent":["import Base from '../Base';\r\nimport {render, fireEvent, screen} from '@testing-library/react-native';\r\nimport React from 'react';\r\nimport Geolocation from 'react-native-geolocation-service';\r\nimport {useDispatch} from 'react-redux';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport {useNavigation} from '@react-navigation/native';\r\n\r\njest.mock('react-redux', () => ({\r\n  useDispatch: jest.fn(),\r\n}));\r\njest.mock('react-native-geolocation-service', () => {\r\n  return {\r\n    getCurrentPosition: jest.fn((success, error, options) => {\r\n      const location = {\r\n        coords: {\r\n          latitude: 50.5,\r\n          longitude: 0.1275,\r\n        },\r\n      };\r\n      success(location);\r\n    }),\r\n  };\r\n});\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\ndescribe('Locations List Screen/Base Component', () => {\r\n  const mockDispatch = jest.fn();\r\n  it('should have the right location', () => {\r\n    const {getByTestId} = render(<Base />);\r\n    expect(getByTestId('list-current-label')).toBeDefined();\r\n  });\r\n});\r\n"],"mappings":"AAQAA,WAAA,GAAKC,IAAI,CAAC,aAAa,EAAE;EAAA,OAAO;IAC9BC,WAAW,EAAEC,IAAI,CAACC,EAAE;EACtB,CAAC;AAAA,CAAC,CAAC;AACHJ,WAAA,GAAKC,IAAI,CAAC,kCAAkC,EAAE,YAAM;EAClD,OAAO;IACLI,kBAAkB,EAAEF,IAAI,CAACC,EAAE,CAAC,UAACE,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAK;MACvD,IAAMC,QAAQ,GAAG;QACfC,MAAM,EAAE;UACNC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE;QACb;MACF,CAAC;MACDN,OAAO,CAACG,QAAQ,CAAC;IACnB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AACFT,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAC1C,OAAO;IACLY,aAAa,EAAEV,IAAI,CAACC,EAAE,EAAE,CAACU,eAAe,CAAC;MACvCC,QAAQ,EAAEZ,IAAI,CAACC,EAAE;IACnB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAAC,IAAAY,sBAAA,GAAAC,OAAA;AA9BH,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAIA,IAAAI,OAAA,GAAAJ,OAAA;AAAuD,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAjB,YAAA;EAAA,IAAAuB,QAAA,GAAAN,OAAA;IAAAd,IAAA,GAAAoB,QAAA,CAAApB,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAyBvD,IAAMqB,UAAU,GAAG,IAAAX,qBAAa,GAAkC;AAClEY,QAAQ,CAAC,sCAAsC,EAAE,YAAM;EACrD,IAAMC,YAAY,GAAGvB,IAAI,CAACC,EAAE,EAAE;EAC9BuB,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAAC,IAAAP,WAAA,CAAAQ,GAAA,EAACZ,KAAA,CAAAa,OAAI,KAAG,CAAC;MAA/BC,WAAW,GAAAJ,OAAA,CAAXI,WAAW;IAClBC,MAAM,CAACD,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAACE,WAAW,EAAE;EACzD,CAAC,CAAC;AACJ,CAAC,CAAC"}