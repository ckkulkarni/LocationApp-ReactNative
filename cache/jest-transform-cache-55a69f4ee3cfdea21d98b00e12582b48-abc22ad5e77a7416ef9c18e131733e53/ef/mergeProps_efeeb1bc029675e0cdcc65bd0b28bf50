47cae8c8046dbf26910f83ac76921a86
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.defaultMergeProps = defaultMergeProps;
exports.wrapMergePropsFunc = wrapMergePropsFunc;
exports.mergePropsFactory = mergePropsFactory;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _verifyPlainObject = _interopRequireDefault(require("../utils/verifyPlainObject"));
var _invalidArgFactory = require("./invalidArgFactory");
function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return (0, _extends2.default)({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
      areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      if (hasRunOnce) {
        if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject.default)(mergedProps, displayName, 'mergeProps');
      }
      return mergedProps;
    };
  };
}
function mergePropsFactory(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : (0, _invalidArgFactory.createInvalidArgFactory)(mergeProps, 'mergeProps');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdE1lcmdlUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJtZXJnZVByb3BzRmFjdG9yeSIsIl9leHRlbmRzMiIsIl92ZXJpZnlQbGFpbk9iamVjdCIsIl9pbnZhbGlkQXJnRmFjdG9yeSIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwib3duUHJvcHMiLCJkZWZhdWx0IiwibWVyZ2VQcm9wcyIsImluaXRNZXJnZVByb3BzUHJveHkiLCJkaXNwYXRjaCIsIl9yZWYiLCJkaXNwbGF5TmFtZSIsImFyZU1lcmdlZFByb3BzRXF1YWwiLCJoYXNSdW5PbmNlIiwibWVyZ2VkUHJvcHMiLCJtZXJnZVByb3BzUHJveHkiLCJuZXh0TWVyZ2VkUHJvcHMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjcmVhdGVJbnZhbGlkQXJnRmFjdG9yeSJdLCJzb3VyY2VzIjpbIm1lcmdlUHJvcHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0TWVyZ2VQcm9wcyA9IGRlZmF1bHRNZXJnZVByb3BzO1xuZXhwb3J0cy53cmFwTWVyZ2VQcm9wc0Z1bmMgPSB3cmFwTWVyZ2VQcm9wc0Z1bmM7XG5leHBvcnRzLm1lcmdlUHJvcHNGYWN0b3J5ID0gbWVyZ2VQcm9wc0ZhY3Rvcnk7XG5cbnZhciBfZXh0ZW5kczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIikpO1xuXG52YXIgX3ZlcmlmeVBsYWluT2JqZWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3RcIikpO1xuXG52YXIgX2ludmFsaWRBcmdGYWN0b3J5ID0gcmVxdWlyZShcIi4vaW52YWxpZEFyZ0ZhY3RvcnlcIik7XG5cbmZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuICgwLCBfZXh0ZW5kczIuZGVmYXVsdCkoe30sIG93blByb3BzLCBzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzKTtcbn1cblxuZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIHtcbiAgICBkaXNwbGF5TmFtZSxcbiAgICBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gIH0pIHtcbiAgICBsZXQgaGFzUnVuT25jZSA9IGZhbHNlO1xuICAgIGxldCBtZXJnZWRQcm9wcztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICBjb25zdCBuZXh0TWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcblxuICAgICAgaWYgKGhhc1J1bk9uY2UpIHtcbiAgICAgICAgaWYgKCFhcmVNZXJnZWRQcm9wc0VxdWFsKG5leHRNZXJnZWRQcm9wcywgbWVyZ2VkUHJvcHMpKSBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhhc1J1bk9uY2UgPSB0cnVlO1xuICAgICAgICBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpICgwLCBfdmVyaWZ5UGxhaW5PYmplY3QuZGVmYXVsdCkobWVyZ2VkUHJvcHMsIGRpc3BsYXlOYW1lLCAnbWVyZ2VQcm9wcycpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gICAgfTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbWVyZ2VQcm9wc0ZhY3RvcnkobWVyZ2VQcm9wcykge1xuICByZXR1cm4gIW1lcmdlUHJvcHMgPyAoKSA9PiBkZWZhdWx0TWVyZ2VQcm9wcyA6IHR5cGVvZiBtZXJnZVByb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIDogKDAsIF9pbnZhbGlkQXJnRmFjdG9yeS5jcmVhdGVJbnZhbGlkQXJnRmFjdG9yeSkobWVyZ2VQcm9wcywgJ21lcmdlUHJvcHMnKTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVosSUFBSUEsc0JBQXNCLEdBQUdDLE9BQU8sQ0FBQyw4Q0FBOEMsQ0FBQztBQUVwRkMsT0FBTyxDQUFDQyxVQUFVLEdBQUcsSUFBSTtBQUN6QkQsT0FBTyxDQUFDRSxpQkFBaUIsR0FBR0EsaUJBQWlCO0FBQzdDRixPQUFPLENBQUNHLGtCQUFrQixHQUFHQSxrQkFBa0I7QUFDL0NILE9BQU8sQ0FBQ0ksaUJBQWlCLEdBQUdBLGlCQUFpQjtBQUU3QyxJQUFJQyxTQUFTLEdBQUdQLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztBQUVqRixJQUFJTyxrQkFBa0IsR0FBR1Isc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBRXRGLElBQUlRLGtCQUFrQixHQUFHUixPQUFPLENBQUMscUJBQXFCLENBQUM7QUFFdkQsU0FBU0csaUJBQWlCQSxDQUFDTSxVQUFVLEVBQUVDLGFBQWEsRUFBRUMsUUFBUSxFQUFFO0VBRTlELE9BQU8sQ0FBQyxDQUFDLEVBQUVMLFNBQVMsQ0FBQ00sT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFRCxRQUFRLEVBQUVGLFVBQVUsRUFBRUMsYUFBYSxDQUFDO0FBQ3hFO0FBRUEsU0FBU04sa0JBQWtCQSxDQUFDUyxVQUFVLEVBQUU7RUFDdEMsT0FBTyxTQUFTQyxtQkFBbUJBLENBQUNDLFFBQVEsRUFBQUMsSUFBQSxFQUd6QztJQUFBLElBRkRDLFdBQVcsR0FBQUQsSUFBQSxDQUFYQyxXQUFXO01BQ1hDLG1CQUFtQixHQUFBRixJQUFBLENBQW5CRSxtQkFBbUI7SUFFbkIsSUFBSUMsVUFBVSxHQUFHLEtBQUs7SUFDdEIsSUFBSUMsV0FBVztJQUNmLE9BQU8sU0FBU0MsZUFBZUEsQ0FBQ1osVUFBVSxFQUFFQyxhQUFhLEVBQUVDLFFBQVEsRUFBRTtNQUNuRSxJQUFNVyxlQUFlLEdBQUdULFVBQVUsQ0FBQ0osVUFBVSxFQUFFQyxhQUFhLEVBQUVDLFFBQVEsQ0FBQztNQUV2RSxJQUFJUSxVQUFVLEVBQUU7UUFDZCxJQUFJLENBQUNELG1CQUFtQixDQUFDSSxlQUFlLEVBQUVGLFdBQVcsQ0FBQyxFQUFFQSxXQUFXLEdBQUdFLGVBQWU7TUFDdkYsQ0FBQyxNQUFNO1FBQ0xILFVBQVUsR0FBRyxJQUFJO1FBQ2pCQyxXQUFXLEdBQUdFLGVBQWU7UUFDN0IsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxZQUFZLEVBQUUsQ0FBQyxDQUFDLEVBQUVsQixrQkFBa0IsQ0FBQ0ssT0FBTyxFQUFFUSxXQUFXLEVBQUVILFdBQVcsRUFBRSxZQUFZLENBQUM7TUFDcEg7TUFFQSxPQUFPRyxXQUFXO0lBQ3BCLENBQUM7RUFDSCxDQUFDO0FBQ0g7QUFFQSxTQUFTZixpQkFBaUJBLENBQUNRLFVBQVUsRUFBRTtFQUNyQyxPQUFPLENBQUNBLFVBQVUsR0FBRztJQUFBLE9BQU1WLGlCQUFpQjtFQUFBLElBQUcsT0FBT1UsVUFBVSxLQUFLLFVBQVUsR0FBR1Qsa0JBQWtCLENBQUNTLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFTCxrQkFBa0IsQ0FBQ2tCLHVCQUF1QixFQUFFYixVQUFVLEVBQUUsWUFBWSxDQUFDO0FBQzlMIn0=