{"version":3,"names":["_interopRequireDefault2","require","_slicedToArray2","_toConsumableArray2","_interopRequireDefault","exports","__esModule","default","initializeConnect","_extends2","_objectWithoutPropertiesLoose2","_hoistNonReactStatics","_react","_interopRequireWildcard","_reactIs","_selectorFactory","_mapDispatchToProps","_mapStateToProps","_mergeProps","_Subscription","_useIsomorphicLayoutEffect","_shallowEqual","_warning","_Context","_useSyncExternalStore","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","useSyncExternalStore","notInitialized","fn","EMPTY_ARRAY","NO_SUBSCRIPTION_ARRAY","stringifyComponent","Comp","JSON","stringify","err","String","useIsomorphicLayoutEffectWithArgs","effectFunc","effectArgs","dependencies","useIsomorphicLayoutEffect","apply","captureWrapperProps","lastWrapperProps","lastChildProps","renderIsScheduled","wrapperProps","childPropsFromStoreUpdate","notifyNestedSubs","current","subscribeUpdates","shouldHandleStateChanges","store","subscription","childPropsSelector","isMounted","additionalSubscribeListener","didUnsubscribe","lastThrownError","checkForUpdates","latestStoreState","getState","newChildProps","error","e","onStateChange","trySubscribe","unsubscribeWrapper","tryUnsubscribe","initStateUpdates","strictEqual","a","b","hasWarnedAboutDeprecatedPureOption","connect","mapStateToProps","mapDispatchToProps","mergeProps","_ref","arguments","length","undefined","pure","_ref$areStatesEqual","areStatesEqual","_ref$areOwnPropsEqual","areOwnPropsEqual","_ref$areStatePropsEqu","areStatePropsEqual","_ref$areMergedPropsEq","areMergedPropsEqual","_ref$forwardRef","forwardRef","_ref$context","context","ReactReduxContext","process","env","NODE_ENV","Context","initMapStateToProps","mapStateToPropsFactory","initMapDispatchToProps","mapDispatchToPropsFactory","initMergeProps","mergePropsFactory","Boolean","wrapWithConnect","WrappedComponent","isValidElementType","Error","wrappedComponentName","displayName","name","selectorFactoryOptions","ConnectFunction","props","_ref2","useMemo","reactReduxForwardedRef","_ref3","propsContext","ContextToUse","Consumer","isContextConsumer","createElement","contextValue","useContext","didStoreComeFromProps","dispatch","didStoreComeFromContext","getServerState","_ref4","createSubscription","bind","_ref5","overriddenContextValue","useRef","isProcessingDispatch","latestSubscriptionCallbackError","actualChildPropsSelector","selector","subscribeForReact","subscribe","reactListener","actualChildProps","message","stack","renderedWrappedComponent","ref","renderedChild","Provider","value","_Connect","memo","Connect","_forwarded","forwardConnectRef","forwarded","_default"],"sources":["connect.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.initializeConnect = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIs = require(\"react-is\");\n\nvar _selectorFactory = _interopRequireDefault(require(\"../connect/selectorFactory\"));\n\nvar _mapDispatchToProps = require(\"../connect/mapDispatchToProps\");\n\nvar _mapStateToProps = require(\"../connect/mapStateToProps\");\n\nvar _mergeProps = require(\"../connect/mergeProps\");\n\nvar _Subscription = require(\"../utils/Subscription\");\n\nvar _useIsomorphicLayoutEffect = require(\"../utils/useIsomorphicLayoutEffect\");\n\nvar _shallowEqual = _interopRequireDefault(require(\"../utils/shallowEqual\"));\n\nvar _warning = _interopRequireDefault(require(\"../utils/warning\"));\n\nvar _Context = require(\"./Context\");\n\nvar _useSyncExternalStore = require(\"../utils/useSyncExternalStore\");\n\nconst _excluded = [\"reactReduxForwardedRef\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet useSyncExternalStore = _useSyncExternalStore.notInitialized;\n\nconst initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\n\nexports.initializeConnect = initializeConnect;\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = _shallowEqual.default,\n  areStatePropsEqual = _shallowEqual.default,\n  areMergedPropsEqual = _shallowEqual.default,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = _Context.ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      (0, _warning.default)('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = (0, _mapStateToProps.mapStateToPropsFactory)(mapStateToProps);\n  const initMapDispatchToProps = (0, _mapDispatchToProps.mapDispatchToPropsFactory)(mapDispatchToProps);\n  const initMergeProps = (0, _mergeProps.mergePropsFactory)(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !(0, _reactIs.isValidElementType)(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = (0, _react.useMemo)(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = (0, _react.useMemo)(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        (0, _reactIs.isContextConsumer)( /*#__PURE__*/_react.default.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = (0, _react.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = (0, _react.useMemo)(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return (0, _selectorFactory.default)(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = (0, _react.useMemo)(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = (0, _Subscription.createSubscription)(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = (0, _react.useMemo)(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return (0, _extends2.default)({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = (0, _react.useRef)();\n      const lastWrapperProps = (0, _react.useRef)(wrapperProps);\n      const childPropsFromStoreUpdate = (0, _react.useRef)();\n      const renderIsScheduled = (0, _react.useRef)(false);\n      const isProcessingDispatch = (0, _react.useRef)(false);\n      const isMounted = (0, _react.useRef)(false);\n      const latestSubscriptionCallbackError = (0, _react.useRef)();\n      (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = (0, _react.useMemo)(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = (0, _react.useMemo)(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = (0, _react.useMemo)(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          _react.default.createElement(WrappedComponent, (0, _extends2.default)({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = (0, _react.useMemo)(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/_react.default.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = _react.default.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = _react.default.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/_react.default.createElement(Connect, (0, _extends2.default)({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return (0, _hoistNonReactStatics.default)(forwarded, WrappedComponent);\n    }\n\n    return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nvar _default = connect;\nexports.default = _default;"],"mappings":"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"}